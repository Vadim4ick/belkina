'use client'

import { GetRecomendationByIdsQuery } from '@/shared/graphql/__generated__'
import { Button } from '@/shared/ui/button'
import { Card } from '@/shared/ui/card'
import { Typography } from '@/shared/ui/typography'
import { memo } from 'react'

type LexicalNode = {
  type: string
  text?: string
  tag?: string
  children?: LexicalNode[]
}

export const LexicalRenderer = ({ node }: { node: LexicalNode }) => {
  const renderNode = (node: LexicalNode, key?: number): React.ReactNode => {
    if (!node) return null

    switch (node.type) {
      case 'root':
        return <div key={key}>{node.children?.map((child, i) => renderNode(child, i))}</div>

      case 'list':
        return (
          <ul key={key} className="space-y-1 text-base text-[#626262]">
            {node.children?.map((child, i) => renderNode(child, i))}
          </ul>
        )

      case 'listitem':
        return (
          <Typography
            className="flex items-center gap-1"
            key={key}
            tag="li"
            variant="poppins-md-16"
          >
            - {node.children?.map((child, i) => renderNode(child, i))}
          </Typography>
        )

      case 'text':
        return (
          <Typography key={key} tag="p" variant="poppins-md-16">
            {node.text}
          </Typography>
        )

      default:
        return null
    }
  }

  return <div className="prose">{renderNode(node)}</div>
}

const Topic = memo(
  ({
    recomendations,
  }: {
    recomendations: GetRecomendationByIdsQuery['Recomendations']['docs']
  }) => {
    return (
      <>
        {recomendations?.map((el) => {
          return (
            <div
              key={el.id}
              className="bg-light-grey flex flex-col gap-12 rounded-xl px-4 py-6 md:px-6 md:py-8 lg:px-12"
            >
              <div className="flex flex-col gap-6">
                <h2 className="text-3xl font-bold text-black">{el.title}</h2>
                {/* <ul className="space-y-1 text-base text-[#626262]">
                  <Typography tag="li" variant="poppins-md-16">
                    ‚Äì –£—á–∏ –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–∏—Å—Ç–∞–≤–æ–∫, –∫–æ—Ä–Ω–µ–π, —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏–π.
                  </Typography>
                  <Typography tag="li" variant="poppins-md-16">
                    ‚Äì –ü—Ä–∞–∫—Ç–∏–∫—É–π –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –ù/–ù–ù, ‚Äì–¢–°–Ø/‚Äì–¢–¨–°–Ø, —Å–ª–∏—Ç–Ω–æ–µ/—Ä–∞–∑–¥–µ–ª—å–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.
                  </Typography>
                  <Typography tag="li" variant="poppins-md-16">
                    ‚Äì –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –¥–µ–ª–∞–π –ø–æ 10‚Äì15 –∑–∞–¥–∞–Ω–∏–π –µ–∂–µ–¥–Ω–µ–≤–Ω–æ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è –æ—à–∏–±–∫–∏.
                  </Typography>
                </ul> */}

                <LexicalRenderer node={el.description.root} />
              </div>

              <Card className="flex w-full flex-col gap-6 rounded-xl bg-white px-4 py-5 shadow-none lg:px-8 lg:py-10 xl:flex-row">
                <div className="flex h-full min-w-1/2 flex-col gap-2 overflow-y-auto">
                  {[
                    '–≠–∫—Å–ø—Ä–µ—Å—Å-—Ç–µ—Å—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º –æ—à–∏–±–æ–∫',
                    '–ü–æ–ª–Ω—ã–π –≤–∏–¥–µ–æ—Ä–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π –∏ —Ç–µ–º',
                    '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏',
                    '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —É–ª—É—á—à–µ–Ω–∏—é',
                  ].map((item, idx) => (
                    <div
                      key={idx}
                      className="bg-light-grey flex items-center gap-3 rounded-[6px] px-[10px] py-3"
                    >
                      üî•
                      <Typography tag="span" className="text-[#6B7280]" variant="poppins-reg-14">
                        {item}
                      </Typography>
                    </div>
                  ))}
                </div>

                <div className="flex w-full flex-col justify-around gap-y-8 bg-white md:min-w-[332px]">
                  <div className="flex w-full flex-col gap-6">
                    <Typography
                      tag="h4"
                      className="text-[#111928] uppercase"
                      variant="poppins-md-16"
                    >
                      –°–¢–ê–ù–î–ê–†–¢ ‚Äî –†–ê–ó–ë–ï–†–ò–°–¨ –í –°–õ–û–ñ–ù–û–ú –° –ü–û–î–î–ï–†–ñ–ö–û–ô
                    </Typography>
                    <div className="bg-light-grey px-3 py-2.5">
                      <Typography tag="p" className="text-[#6B7280]" variant="poppins-reg-14">
                        –ü–æ–¥—Ö–æ–¥–∏—Ç —Ç–µ–º, –∫—Ç–æ —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ç–µ–º–∞—Ö –∏ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤
                        —Ä–∞–∑–±–æ—Ä–µ.
                      </Typography>
                    </div>
                  </div>
                  <div className="flex w-full flex-col gap-6">
                    <Typography tag="p" className="text-[#6B7280]" variant="poppins-reg-14">
                      –ò–¥–µ–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å: –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å
                    </Typography>
                    <Typography
                      className="text-dark-grey uppercase"
                      tag="p"
                      variant="poppins-md-16"
                    >
                      –û—Ç 9990 —Ä—É–±–ª–µ–π
                    </Typography>

                    <Button size={'xl'}>–í—ã–±—Ä–∞—Ç—å</Button>
                  </div>
                </div>
              </Card>
            </div>
          )
        })}
      </>
    )
  },
)

export { Topic }
