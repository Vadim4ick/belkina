import { CollectionConfig } from 'payload'

export const Tariffs: CollectionConfig = {
  slug: 'tariffs',
  admin: {
    useAsTitle: 'title',
    defaultColumns: ['title', 'price'],
  },
  labels: {
    singular: {
      ru: '–¢–∞—Ä–∏—Ñ',
      en: 'Tariff',
    },
    plural: {
      ru: '–¢–∞—Ä–∏—Ñ—ã',
      en: 'Tariffs',
    },
  },

  access: {
    create: async ({ req }) => {
      const { docs } = await req.payload.find({
        collection: 'tariffs',
        depth: 0,
      })
      return docs?.length < 3
    },
    // read: async ({ req }) => {
    //   const authHeader = req.headers.get('authorization')
    //   const token = authHeader?.replace(/^Bearer\s/, '')

    //   if (!token) {
    //     console.warn('üö´ –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ ‚Äî –¥–æ—Å—Ç—É–ø –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–ø—Ä–µ—â—ë–Ω')
    //     return false
    //   }

    //   try {
    //     const decoded = await JwtService.verifyToken(token)
    //     console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω:', decoded)
    //     return true
    //   } catch (err) {
    //     console.warn('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω:', (err as Error)?.message)
    //     return false // ‚Üê –Ω–µ –±—Ä–æ—Å–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –ø—Ä–æ—Å—Ç–æ –æ—Ç–∫–∞–∑—ã–≤–∞–µ–º
    //   }
    // },
    read: () => true,
  },

  fields: [
    {
      type: 'row',
      fields: [
        {
          name: 'title',
          type: 'text',
          required: true,
          admin: {
            width: '50%',
          },
        },
        {
          name: 'price',
          type: 'number',
          required: true,
          admin: {
            width: '50%',
          },
        },
      ],
    },
    {
      name: 'subtitle',
      required: true,
      type: 'text',
    },
    {
      name: 'description',
      required: true,
      type: 'textarea',
    },
    {
      name: 'benefits',
      type: 'array',
      label: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      labels: {
        singular: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ',
        plural: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      },
      required: true,
      admin: {
        initCollapsed: true,
      },
      fields: [
        {
          name: 'value',
          label: '–û–ø–∏—Å–∞–Ω–∏–µ',
          type: 'text',
          required: true,
        },
      ],
    },
  ],
}
