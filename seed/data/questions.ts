import payload from 'payload'

export const createQuestions = async (recommendationId: number) => {
  const questions = []

  console.log('üå± –°–∏–¥–∏–º –≤–æ–ø—Ä–æ—Å—ã...')

  // 1. –û–¥–∏–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
  questions.push(
    await payload.create({
      collection: 'questions',
      data: {
        questionText: '–ö–∞–∫–æ–π —Ü–≤–µ—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º?',
        questionType: 'single_choice',
        recommendation: recommendationId,
        answers: [
          { label: '–ö—Ä–∞—Å–Ω—ã–π', value: 'red', isCorrect: false },
          { label: '–°–∏–Ω–∏–π', value: 'blue', isCorrect: false },
          { label: '–ó–µ–ª—ë–Ω—ã–π', value: 'green', isCorrect: false },
          { label: '–û—Ä–∞–Ω–∂–µ–≤—ã–π', value: 'orange', isCorrect: true },
        ],
      },
    }),
  )

  // 2. –ù–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
  questions.push(
    await payload.create({
      collection: 'questions',
      data: {
        questionText: '–í—ã–±–µ—Ä–∏—Ç–µ —á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞',
        questionType: 'multiple_choice',
        answers: [
          { label: '1', value: '1', isCorrect: false },
          { label: '2', value: '2', isCorrect: true },
          { label: '3', value: '3', isCorrect: false },
          { label: '4', value: '4', isCorrect: true },
        ],
      },
    }),
  )

  // 3. –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
  questions.push(
    await payload.create({
      collection: 'questions',
      data: {
        questionText: '–°–æ–æ—Ç–Ω–µ—Å–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –∏ —Å—Ç–æ–ª–∏—Ü—É',
        questionType: 'matching',
        matchingPairs: [
          { left: '–§—Ä–∞–Ω—Ü–∏—è', right: '–ü–∞—Ä–∏–∂' },
          { left: '–ò—Ç–∞–ª–∏—è', right: '–†–∏–º' },
          { left: '–Ø–ø–æ–Ω–∏—è', right: '–¢–æ–∫–∏–æ' },
        ],
      },
    }),
  )

  // 4. –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
  questions.push(
    await payload.create({
      collection: 'questions',
      data: {
        questionText: '–ö—Ç–æ –Ω–∞–ø–∏—Å–∞–ª "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ"?',
        questionType: 'text_input',
        recommendation: recommendationId,
        textAnswer: '–î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π',
      },
    }),
  )

  return questions
}
